---
- repo: "chriskempson/base16-vim"
  lazy: 0

# Markdown related
- repo: prettier/vim-prettier
  build: yarn install
  #hook_source: |-

# Golang related
- repo: fatih/vim-go
  if: has('nvim-0.4.0') || has('patch-8.0.1453')
  on_ft: [go, gomod, gotexttmpl, gohtmltmpl]
  hook_add: |-
    let g:go_gopls_enabled = 1
    let g:go_decls_mode = 'fzf'
    let g:go_code_completion_enabled = 0
    let g:go_doc_keywordprg_enabled = 0
    let g:go_def_mapping_enabled = 0
    let g:go_jump_to_error = 0
    let g:go_fmt_autosave = 1
    let g:go_fmt_fail_silently = 1
    let g:go_fmt_experimental = 1
    let g:go_imports_autosave = 1
    let g:go_mod_fmt_autosave = 0
    let g:go_snippet_engine = 'ultisnips'
    let g:go_textobj_enabled = 1
    let g:go_list_height = 10
    let g:go_list_autoclose = 0
    let g:go_fold_enable = []
    let g:go_info_mode = 'gopls'
    let g:go_def_mode = 'gopls'
    let g:go_referrers_mode = 'gopls'
    let g:go_implements_mode = 'guru'
    let g:go_highlight_array_whitespace_error = 0
    let g:go_highlight_chan_whitespace_error = 0
    let g:go_highlight_space_tab_error = 0
    let g:go_highlight_trailing_whitespace_error = 0
    let g:go_highlight_extra_types = 1
    let g:go_highlight_build_constraints = 1
    let g:go_highlight_fields = 1
    let g:go_highlight_format_strings = 1
    let g:go_highlight_functions = 1
    let g:go_highlight_function_calls = 1
    let g:go_highlight_function_parameters = 1
    let g:go_highlight_types = 1
    let g:go_highlight_generate_tags = 1
    let g:go_highlight_operators = 1
    let g:go_highlight_string_spellcheck = 0
    let g:go_highlight_variable_declarations = 0
    let g:go_highlight_variable_assignments = 0
    let g:go_test_show_name = 1
    let g:go_auto_type_info = 0
    if has('nvim') || exists(':terminal')
      " terminal mode does not work in nvim, it opens a vsplit and shows the test 
      " result in both windows of this split
      let g:go_term_enabled = 1
      let g:go_term_reuse=1
      "let g:go_term_mode='split'
    endif

# ==========================================
# Commands
# --------

- { repo: tpope/vim-scriptease, on_event: [FileType, WinEnter], lazy:0 }
- { repo: tpope/vim-surround, on_event: [FileType, WinEnter], lazy: 0 }
- { repo: tpope/vim-fugitive, lazy: 0 }
- { repo: mhinz/vim-signify, lazy: 0 }

- repo: junegunn/fzf
  merged: 0
  on_cmd: FZF
  type__depth: 1
  hook_source: |-
    let g:fzf_layout = { 'down': '~25%' }

- repo: junegunn/fzf.vim
  depends: fzf
  merged: 0
  on_cmd: [Files, GitFiles, Buffers, Lines, Locate, Colors, Ag, Rg, Tags]
  on_func: [fzf#vim#with_preview, fzf#run, vista#finder#fzf#Run]

- repo: pbogut/fzf-mru.vim
  depends: fzf.vim
  merged: 0
  on_cmd: [FZFMru]
  on_func: [fzf#vim#with_preview, fzf#run, vista#finder#fzf#Run]

- repo: vimwiki/vimwiki
  on_map: { n: <Plug> }
  on_cmd: [VimwikiIndex, VimwikiUISelect]
  hook_add: |-
    let g:vimwiki_use_calendar = 1
    let g:vimwiki_hl_headers = 1
    let g:vimwiki_hl_cb_checked = 1
    let g:vimwiki_autowriteall = 0
    " enables folding via vim-markdown
    let g:vimwiki_folding = 'expr'
  hook_source: |-
    let g:vimwiki_list = [
    \   { 'diary_header': 'Diary',
    \     'diary_link_fmt': '%Y-%m/%d',
    \     'auto_toc': 1,
    \     'path': '~/wiki/',
    \     'syntax': 'markdown',
    \     'ext': '.wiki' },
    \   { 'path': '~/docs/books/',
    \     'syntax': 'markdown',
    \     'ext': '.md' }
    \ ]

#  vim: set ts=2 sw=2 tw=80 et :
